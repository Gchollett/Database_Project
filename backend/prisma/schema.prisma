generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  username   String       @id @db.VarChar(50)
  password   String       @db.VarChar(50)
  email      String?      @db.VarChar(50)
  company    company[]
  contractor contractor[]
}

model company {
  compid   Int     @id @default(autoincrement())
  name     String  @db.VarChar(50)
  username String? @db.VarChar(50)
  User     User?   @relation(fields: [username], references: [username], onDelete: NoAction, onUpdate: NoAction)
  job      job[]
}

model contractor {
  contid         Int              @id @default(autoincrement())
  rate           Decimal?         @db.Money
  firstname      String?          @db.VarChar(50)
  lastname       String?          @db.VarChar(50)
  resume         String?          @db.VarChar(50)
  username       String?          @db.VarChar(50)
  User           User?            @relation(fields: [username], references: [username], onDelete: NoAction, onUpdate: NoAction)
  contractortag  contractortag[]
  jobapplication jobapplication[]
}

model contractortag {
  contid     Int
  name       String     @db.VarChar(50)
  contractor contractor @relation(fields: [contid], references: [contid], onDelete: NoAction, onUpdate: NoAction)
  tag        tag        @relation(fields: [name], references: [name], onDelete: NoAction, onUpdate: NoAction)

  @@id([contid, name])
}

model job {
  jobid          Int              @id @default(autoincrement())
  title          String?          @db.VarChar(50)
  pay            Decimal?          @db.Money
  remote         Boolean?          
  start          DateTime?        @db.Timestamp(6)
  end            DateTime?        @db.Timestamp(6)
  description    String?          @db.VarChar(50)
  compid         Int?
  company        company?         @relation(fields: [compid], references: [compid], onDelete: NoAction, onUpdate: NoAction)
  jobapplication jobapplication[]
  jobtag         jobtag[]
}

model jobapplication {
  contid     Int
  jobid      Int
  status     String?    @db.VarChar(50)
  contractor contractor @relation(fields: [contid], references: [contid], onDelete: NoAction, onUpdate: NoAction)
  job        job        @relation(fields: [jobid], references: [jobid], onDelete: NoAction, onUpdate: NoAction)

  @@id([contid, jobid])
}

model jobtag {
  jobid Int
  name  String @db.VarChar(50)
  job   job    @relation(fields: [jobid], references: [jobid], onDelete: NoAction, onUpdate: NoAction)
  tag   tag    @relation(fields: [name], references: [name], onDelete: NoAction, onUpdate: NoAction)

  @@id([jobid, name])
}

model tag {
  name          String          @id @db.VarChar(50)
  contractortag contractortag[]
  jobtag        jobtag[]
}
